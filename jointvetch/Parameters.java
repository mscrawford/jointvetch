package jointvetch;

class Parameters
{
	// independent variables
	static double stochMax;
	static boolean hydrochoryBool;
	static double implantationRate;
	static double seedBankRate;

	// linear scaling & simulation warm up
	static final double ADJUSTMENT_FACTOR = 0.18;
	static final int ENVIRONMENTAL_GRACE_PERIOD = 3;
	
	// fuzzy distance measurements to correct for error.
	static final double BUFFER_SIZE = 0.01;

	// set parameters
	static final double HYDROCHORY_PROB = 0.340;
	static final double WINTER_SURVIVAL_RATE = 0.379;
	static final double IMPLANTATION_MAXIMUM_DISTANCE = 4.0;

	// environment's parameters
	static final int MAX_YEAR_COUNT = 100;
	static final int MAX_POPULATION_COUNT = 15000;

	// DBSCAN implementation
	static final double EPSILON = 25.0;
	static final int MIN_POINTS = 1;

	// Plots parameters
	static final int CARRYING_CAPACITY = 50; // per m^2 "plot"

	/* Look up tables; the "goodness" of a square to its vital rates */
	/* Fecundity distibution */
	private static final double[] FEC_QLNORM = {12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 37.96138, 12.59908, 12.59908, 12.59908, 29.3216, 12.59908,
		26.07202, 12.59908, 37.9073, 12.59908, 18.96837, 29.20378, 34.44911, 12.59908, 20.49092,
		31.4753, 34.07251, 16.13677, 17.52283, 19.77912, 23.51461, 18.53933, 15.19108, 27.85906,
		24.97635, 25.8957, 22.38879, 27.08078, 31.06231, 28.94787, 33.40374, 35.58257, 37.69114,
		40.48883, 42.80304, 39.26207, 46.76036, 44.21195, 49.45689, 57.19938, 52.26411, 53.8743,
		60.34878, 55.51347, 63.60797, 65.49502, 71.05717, 67.41339, 78.78819, 85.83175, 74.71678,
		81.08546, 93.26227, 88.34177, 101.1852, 83.21622, 116.0756, 95.79146, 106.3576, 109.4174,
		126.4678, 119.5354, 142.3813, 130.2758, 163.5629, 133.9291, 150.1275, 191.0651, 207.5464,
		168.6249, 177.2827, 182.5377, 221.3933, 152.6785, 243.4347, 228.3229, 258.0163, 267.5019,
		283.1033, 309.1617, 330.1229, 290.5865, 350.3414, 296.7188, 372.0016, 385.1527, 472.963,
		402.742, 423.1606, 540.6052, 610.925, 722.5702, 507.8034, 484.216, 800, 352.2497, 433.0041,
		426.4899, 388.3121, 629.3637, 390.7365, 404.3556, 116.1084, 243.5935, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 352.6322, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908,
		12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908, 12.59908};

	/* Germination distribution */
	private static final double[] GERM_QWEIBULL = {0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.07915053, 0.008133662,
		0.008133662, 0.008133662, 0.05183421, 0.008133662, 0.04191971, 0.008133662, 0.07897787,
		0.008133662, 0.02200772, 0.0514694, 0.06795684, 0.008133662, 0.02598753, 0.05855571, 0.0667609,
		0.0152057, 0.01842753, 0.02410239, 0.03440178, 0.02092352, 0.01314171, 0.04733152, 0.03866178,
		0.04139208, 0.03119953, 0.04496109, 0.05725984, 0.0506782, 0.06464038, 0.07156281, 0.07828781,
		0.08721847, 0.09459072, 0.08330331, 0.1071221, 0.09906531, 0.1155835, 0.1394195, 0.1243099,
		0.1292734, 0.1488937, 0.134293, 0.1585536, 0.1640781, 0.1800659, 0.1696422, 0.2015571,
		0.2204154, 0.1903442, 0.2077821, 0.2395954, 0.2269746, 0.2592811, 0.2134913, 0.2943086,
		0.2459632, 0.2717293, 0.2789498, 0.3173675, 0.3021053, 0.3507129, 0.3255543, 0.3918656,
		0.333283, 0.3661631, 0.4406562, 0.4677609, 0.4012132, 0.4168036, 0.4260334, 0.4894546,
		0.3711473, 0.5221749, 0.4999708, 0.54272, 0.5556556, 0.5762487, 0.6089169, 0.6337866,
		0.5858422, 0.656709, 0.5935738, 0.6802117, 0.6939909, 0.7779269, 0.7118822, 0.7319308,
		0.834791, 0.888316, 0.9640716, 0.8079471, 0.7878036, 1, 0.658822, 0.7413362, 0.7351303,
		0.6972488, 0.9015454, 0.6997356, 0.713494, 0.2943831, 0.5224031, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.6592445, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662,
		0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662, 0.008133662};

	/* Survival distribution */
	private static final double[] SURV_QEXP = {0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.04892648, 0.002416123,
		0.002416123, 0.002416123, 0.02795751, 0.002416123, 0.02111573, 0.002416123, 0.04878543,
		0.002416123, 0.009008124, 0.02769767, 0.03999409, 0.002416123, 0.01122211, 0.03284776,
		0.03906622, 0.005525249, 0.007123485, 0.01015866, 0.0162601, 0.008426126, 0.004556093,
		0.02479258, 0.01897376, 0.02076508, 0.01428974, 0.02316443, 0.03189013, 0.02713616,
		0.03743416, 0.04282346, 0.04822268, 0.05562567, 0.06192486, 0.05234859, 0.07299567,
		0.06582684, 0.08071373, 0.103419, 0.08886642, 0.09358748, 0.1128104, 0.09842158, 0.1225862,
		0.1282645, 0.1450416, 0.1340461, 0.1683565, 0.1894891, 0.1560865, 0.1752647, 0.2115882,
		0.1969796, 0.2348703, 0.1816594, 0.2777054, 0.2190543, 0.2498923, 0.2587085, 0.3068277,
		0.2874729, 0.3501532, 0.317335, 0.4054735, 0.3273327, 0.3706902, 0.4735204, 0.5124035,
		0.4183098, 0.4399329, 0.4528582, 0.5440535, 0.3773757, 0.5926475, 0.5595608, 0.6236689,
		0.6433966, 0.6751076, 0.7261628, 0.7656286, 0.6900065, 0.8024493, 0.702071, 0.8406341,
		0.8632207, 1.003868, 0.8927635, 0.9261538, 1.102004, 1.19637, 1.333074, 1.055399, 1.020752,
		1, 0.8058645, 0.9419204, 0.9315098, 0.8685822, 1.219982, 0.8726801, 0.8954369, 0.2777983,
		0.59299, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.8065478, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123, 0.002416123,
		0.002416123, 0.002416123, 0.002416123, 0.002416123};

	static
	{
		stochMax = HoltsCreek.instance().getStochMax();
		hydrochoryBool = HoltsCreek.instance().getHydrochoryBool();
		implantationRate = HoltsCreek.instance().getImplantationRate();
		seedBankRate = HoltsCreek.instance().getSeedBankRate();	
	}

	// Suppress default constructor for noninstantiability
	private Parameters() {
		throw new AssertionError();
	}

	static double getGermRate(int color)
	{
		if (color < 0 || color > 255)
		{
			return 0;
		}
		double c = GERM_QWEIBULL[color];
		return (c>1 ? 1:c);
	}

	static double getSurvRate(int color)
	{
		if (color < 0 || color > 255)
		{
			return 0;
		}
		double s = SURV_QEXP[color];
		return (s>1 ? 1:s);
	}

	static int getFecundity(int color)
	{
		if (color < 0 || color > 255)
		{
			return 0;
		}
		return (int) FEC_QLNORM[color];
	}

}
